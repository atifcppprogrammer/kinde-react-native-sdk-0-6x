/**
 * Kinde Management API
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@kinde.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import * as runtime from '../ApiClient';
import type {
    CreateUser200Response,
    CreateUserRequest,
    GetUsers200Response
} from '../models';
import {
    CreateUser200ResponseFromJSON,
    CreateUser200ResponseToJSON,
    CreateUserRequestFromJSON,
    CreateUserRequestToJSON,
    GetUsers200ResponseFromJSON,
    GetUsers200ResponseToJSON
} from '../models';

export interface CreateUserOperationRequest {
    createUserRequest?: CreateUserRequest;
}

export interface GetUsersRequest {
    sort?: GetUsersSortEnum;
    pageSize?: number | null;
    userId?: number | null;
    nextToken?: string | null;
}

/**
 *
 */
export class UsersApi extends runtime.BaseAPI {
    /**
     * Creates a user record and optionally zero or more identities for the user. An example identity could be the email address of the user
     * Creates a user record
     */
    async createUserRaw(
        requestParameters: CreateUserOperationRequest,
        initOverrides?: RequestInit | runtime.InitOverrideFunction
    ): Promise<runtime.ApiResponse<CreateUser200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token('kindeBearerAuth', []);

            if (tokenString) {
                headerParameters['Authorization'] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request(
            {
                path: `/user`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: CreateUserRequestToJSON(
                    requestParameters.createUserRequest
                )
            },
            initOverrides
        );

        return new runtime.JSONApiResponse(response, (jsonValue) =>
            CreateUser200ResponseFromJSON(jsonValue)
        );
    }

    /**
     * Creates a user record and optionally zero or more identities for the user. An example identity could be the email address of the user
     * Creates a user record
     */
    async createUser(
        requestParameters: CreateUserOperationRequest = {},
        initOverrides?: RequestInit | runtime.InitOverrideFunction
    ): Promise<CreateUser200Response> {
        const response = await this.createUserRaw(
            requestParameters,
            initOverrides
        );
        return await response.value();
    }

    /**
     * The returned list can be sorted by full name or email address in ascending or descending order. The number of records to return at a time can also be controlled using the page_size query string parameter.
     * Returns a paginated list of end-user records for a business
     */
    async getUsersRaw(
        requestParameters: GetUsersRequest,
        initOverrides?: RequestInit | runtime.InitOverrideFunction
    ): Promise<runtime.ApiResponse<GetUsers200Response>> {
        const queryParameters: any = {};

        if (requestParameters.sort !== undefined) {
            queryParameters['sort'] = requestParameters.sort;
        }

        if (requestParameters.pageSize !== undefined) {
            queryParameters['page_size'] = requestParameters.pageSize;
        }

        if (requestParameters.userId !== undefined) {
            queryParameters['user_id'] = requestParameters.userId;
        }

        if (requestParameters.nextToken !== undefined) {
            queryParameters['next_token'] = requestParameters.nextToken;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token('kindeBearerAuth', []);

            if (tokenString) {
                headerParameters['Authorization'] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request(
            {
                path: `/users`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters
            },
            initOverrides
        );

        return new runtime.JSONApiResponse(response, (jsonValue) =>
            GetUsers200ResponseFromJSON(jsonValue)
        );
    }

    /**
     * The returned list can be sorted by full name or email address in ascending or descending order. The number of records to return at a time can also be controlled using the page_size query string parameter.
     * Returns a paginated list of end-user records for a business
     */
    async getUsers(
        requestParameters: GetUsersRequest = {},
        initOverrides?: RequestInit | runtime.InitOverrideFunction
    ): Promise<GetUsers200Response> {
        const response = await this.getUsersRaw(
            requestParameters,
            initOverrides
        );
        return await response.value();
    }
}

/**
 * @export
 */
export const GetUsersSortEnum = {
    NameAsc: 'name_asc',
    NameDesc: 'name_desc',
    EmailAsc: 'email_asc',
    EmailDesc: 'email_desc'
} as const;
export type GetUsersSortEnum =
    (typeof GetUsersSortEnum)[keyof typeof GetUsersSortEnum];
